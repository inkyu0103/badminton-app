generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nickname  String   @unique
  email     String   @unique
  password  String
  rank      Rank     @default(E)
  gender    Gender   @default(MALE)
  birthday  DateTime @default(now())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  Review RacketReview[]

  @@map("user")
}

model Racket {
  id      Int            @id @default(autoincrement())
  name    String         @unique
  price   Int
  image   String?
  shaft   Shaft
  weight  RacketWeight[]
  score   Float          @default(0)
  brandId Int
  brand   Brand          @relation(references: [id], fields: [brandId])
  Review  RacketReview[]
  balance Balance

  @@map("racket")
}

model RacketReview {
  id         Int      @id @default(autoincrement())
  control    Int
  power      Int
  weight     Int
  starRating Int
  review     String
  racketId   Int      @map("racket_id")
  userId     Int      @map("user_id")
  racket     Racket   @relation(fields: [racketId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt() @map("updated_at")

  @@map("racket_review")
}

model Brand {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  Racket Racket[]

  @@map("brand")
}

model Verification {
  id        Int       @id @default(autoincrement())
  token     String    @unique
  createdAt DateTime? @default(now()) @map("created_at")

  @@map("verification")
}

enum Rank {
  S
  A
  B
  C
  D
  E
}

enum Gender {
  MALE
  FEMALE
}

enum RacketWeight {
  W3U
  W4U
  W5U
}

enum Balance {
  HEAD_HEAVY
  EVEN
  HEAD_LIGHT
}

enum Shaft {
  STIFF
  MEDIUM
  FLEXIBLE
}
